/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import CrudsAdmin.crud_project;
import config.Session;
import java.awt.Color;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import config.dbConnector;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SCC-COLLEGE
 */
public class Projectpage extends javax.swing.JInternalFrame {

    /**
     * Creates new form 
     */
    public Projectpage() {
        initComponents();
        
        displayData();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        searchBar.setOpaque(false);
        searchBar.setBackground(new Color(0,0,0,0));
    }
    
    public void displayData(){
    try{
        dbConnector dbc = new dbConnector();

        // Join user table to get user first name (maker name)
        String query = "SELECT p.p_id, p.p_name, p.p_salary, p.p_description, u.u_fname, p.p_date, p.p_duedate, p.p_status " +
                       "FROM tbl_project p LEFT JOIN tbl_users u ON p.u_id = u.u_id";
        ResultSet rs = dbc.getData(query);

        projectTable.setModel(DbUtils.resultSetToTableModel(rs));

        String[] headers = {"P ID", "Project Name", "Salary", "Description", "Maker Name", "Start Date", "Due Date", "Status"};
        for (int i = 0; i < headers.length; i++) {
            projectTable.getColumnModel().getColumn(i).setHeaderValue(headers[i]);
        }
        projectTable.getTableHeader().repaint();

    }catch(SQLException ex){
        System.out.println("Errors:"+ex.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        refresh = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        add = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        jPanel1.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, -1, -1));

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, -1, -1));

        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPanel1.add(edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 70, -1));

        deletebutton.setText("DELETE");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(deletebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, -1));

        searchBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchBar.setMinimumSize(new java.awt.Dimension(8, 20));
        searchBar.setPreferredSize(new java.awt.Dimension(8, 20));
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        jPanel1.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 220, 23));

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(projectTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 520, 250));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("PROJECT PAGE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Untitled Project.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        crud_project ap = new crud_project();
        ap.setVisible(true);
        
        JFrame parent = (JFrame) SwingUtilities.getWindowAncestor(this);
                        parent.dispose();
    }//GEN-LAST:event_addActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        int rowIndex = projectTable.getSelectedRow();

    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select a project to edit.");
        return;
    }

    try {
        TableModel model = projectTable.getModel();
        Object idObj = model.getValueAt(rowIndex, 0);
        if (idObj == null) {
            JOptionPane.showMessageDialog(null, "Selected project ID is invalid.");
            return;
        }
        int projectIdToEdit = Integer.parseInt(idObj.toString());

        dbConnector dbc = new dbConnector();

        String query = "SELECT p.*, u.u_fname " +
                       "FROM tbl_project p LEFT JOIN tbl_users u ON p.u_id = u.u_id " +
                       "WHERE p.p_id = ?";

        java.sql.Connection conn = dbc.getConnection();
        java.sql.PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, projectIdToEdit);

        ResultSet rs = pstmt.executeQuery();

        if (rs.next()) {
            // Save project data to session
            Session session = Session.getInstance();
            session.setP_id(rs.getInt("p_id"));
            session.setP_name(rs.getString("p_name"));
            session.setP_salary(rs.getString("p_salary"));
            session.setP_description(rs.getString("p_description"));
            session.setU_fname(rs.getString("u_fname"));

            // Launch form and populate fields
            crud_project ap = new crud_project();
            ap.p_id.setText(String.valueOf(rs.getInt("p_id")));
            ap.user_id.setText(String.valueOf(rs.getInt("u_id")));
            ap.pname.setText(rs.getString("p_name"));
            ap.salary.setText(rs.getString("p_salary"));
            ap.description.setText(rs.getString("p_description"));
            ap.uname.setText(rs.getString("u_fname"));  // might be null if no user
            ap.date.setDate(rs.getDate("p_date"));
            ap.due.setDate(rs.getDate("p_duedate"));
            ap.status.setSelectedItem(rs.getString("p_status"));

            // Enable update mode
            ap.add.setEnabled(false);
            ap.update.setEnabled(true);

            ap.setVisible(true);

            // Close current frame
            JFrame parent = (JFrame) SwingUtilities.getWindowAncestor(this);
            parent.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Project not found.");
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Database error: " + ex.getMessage());
        ex.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Unexpected error: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_editActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = searchBar.getText().trim();

    try {
        dbConnector dbc = new dbConnector();

        String query = "SELECT p.p_id, p.p_name, p.p_salary, p.p_description, u.u_fname, p.p_date, p.p_duedate, p.p_status " +
                       "FROM tbl_project p LEFT JOIN tbl_users u ON p.u_id = u.u_id " +
                       "WHERE u.u_fname LIKE ? OR p.p_name LIKE ? OR p.p_id LIKE ?";

        java.sql.Connection conn = dbc.getConnection();
        java.sql.PreparedStatement pstmt = conn.prepareStatement(query);
        String likeKeyword = "%" + keyword + "%";
        pstmt.setString(1, likeKeyword);
        pstmt.setString(2, likeKeyword);
        pstmt.setString(3, likeKeyword);

        ResultSet rs = pstmt.executeQuery();

        if (!rs.isBeforeFirst()) {
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
            model.setColumnIdentifiers(new String[]{"Message"});
            model.addRow(new Object[]{"No results found for \"" + keyword + "\""});
            projectTable.setModel(model);
        } else {
            projectTable.setModel(DbUtils.resultSetToTableModel(rs));
            String[] headers = {"P ID", "Project Name", "Salary", "Description", "Maker Name", "Start Date", "Due Date", "Status"};
            for (int i = 0; i < headers.length; i++) {
                projectTable.getColumnModel().getColumn(i).setHeaderValue(headers[i]);
            }
            projectTable.getTableHeader().repaint();
        }

    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        int rowIndex = projectTable.getSelectedRow();

    if (rowIndex < 0) {
        JOptionPane.showMessageDialog(null, "Please select a project to delete.");
        return;
    }

    TableModel model = projectTable.getModel();
    Object pIdObj = model.getValueAt(rowIndex, 0);  // p_id should be in column 0
    if (pIdObj == null) {
        JOptionPane.showMessageDialog(null, "Selected row has invalid project ID.");
        return;
    }

    String projectId = pIdObj.toString();

    int confirm = JOptionPane.showConfirmDialog(null,
            "Are you sure you want to delete this project?",
            "Confirm Deletion",
            JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        dbConnector dbc = new dbConnector();
        String query = "DELETE FROM tbl_project WHERE p_id = ?";
        try {
            java.sql.Connection conn = dbc.getConnection();
            java.sql.PreparedStatement pstmt = conn.prepareStatement(query);
            pstmt.setString(1, projectId);
            int affectedRows = pstmt.executeUpdate();

            if (affectedRows > 0) {
                JOptionPane.showMessageDialog(null, "Project deleted successfully!");
                displayData();
            } else {
                JOptionPane.showMessageDialog(null, "No project found with the specified ID.");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Failed to delete project: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_deletebuttonActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        displayData();
    }//GEN-LAST:event_refreshActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton deletebutton;
    private javax.swing.JButton edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable projectTable;
    private javax.swing.JButton refresh;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables
}
