/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import CrudsAdmin.crud_project;
import CrudsAdmin.crud_tasks;
import CrudsAdmin.crud_users;
import config.Session;
import java.awt.Color;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import config.dbConnector;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SCC-COLLEGE
 */
public class Taskpage extends javax.swing.JInternalFrame {

    /**
     * Creates new form Userpage
     */
    public Taskpage() {
        initComponents();
        
        displayData();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        searchBar.setOpaque(false);
        searchBar.setBackground(new Color(0,0,0,0));
    }
    
    public void displayData(){
        try{
            dbConnector dbc = new dbConnector();
            ResultSet rs = dbc.getData("SELECT t_id, p_name, u_fname, user_assign, t_date, t_duedate, t_status FROM tbl_task");
            userTable.setModel(DbUtils.resultSetToTableModel(rs));
            userTable.getColumnModel().getColumn(0).setHeaderValue("Task ID");
            userTable.getColumnModel().getColumn(1).setHeaderValue("Project Name");
            userTable.getColumnModel().getColumn(2).setHeaderValue("Maker Name");
            userTable.getColumnModel().getColumn(3).setHeaderValue("Assign User");
            userTable.getColumnModel().getColumn(4).setHeaderValue("Start Date");
            userTable.getColumnModel().getColumn(5).setHeaderValue("Due Date");
            userTable.getColumnModel().getColumn(6).setHeaderValue("Status");
            
        }catch(SQLException ex){
                    System.out.println("Errors:"+ex.getMessage());
      
        }
        
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        editbutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        jPanel1.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        editbutton.setText("EDIT");
        editbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(editbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, -1));

        deletebutton.setText("DELETE");
        deletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(deletebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, -1, -1));

        searchBar.setMinimumSize(new java.awt.Dimension(8, 20));
        searchBar.setPreferredSize(new java.awt.Dimension(8, 20));
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        jPanel1.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, 240, 23));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(userTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 520, 250));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("TASK PAGE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Untitled Project.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        crud_tasks at = new crud_tasks();
        at.setVisible(true);
        JFrame parent = (JFrame) SwingUtilities.getWindowAncestor(this);
        parent.dispose();
    }//GEN-LAST:event_addButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = searchBar.getText().trim();

    try {
        dbConnector dbc = new dbConnector();
        String query = "SELECT u_id, p_id, t_id, u_fname, p_name, user_assign FROM tbl_task " +
                       "WHERE u_fname LIKE '%" + keyword + "%' " +
                       "OR p_name LIKE '%" + keyword + "%' " +
                       "OR t_id LIKE '%" + keyword + "%' " +
                        "OR user_assign LIKE '%" + keyword + "%' " +
                       "OR p_id LIKE '%" + keyword + "%'";
        ResultSet rs = dbc.getData(query);

        if (!rs.isBeforeFirst()) {
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
            model.setColumnIdentifiers(new String[]{"Message"});
            model.addRow(new Object[]{"No results found for \"" + keyword + "\""});
            userTable.setModel(model);
        } else {
            // Show search results
            userTable.setModel(DbUtils.resultSetToTableModel(rs));
        }

    } catch (SQLException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage(), "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void editbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbuttonActionPerformed
        int rowIndex = userTable.getSelectedRow();

        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a project to edit.");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel model = userTable.getModel();
                int taskIdToEdit = (int) model.getValueAt(rowIndex, 0);
                Session session = Session.getInstance();
                session.setT_id(taskIdToEdit);

                crud_tasks at = new crud_tasks();
                ResultSet rs = dbc.getData("SELECT * FROM tbl_task WHERE t_id = '" + taskIdToEdit + "'");
                if (rs.next()) {
                    at.assign_user.setText("" + rs.getInt("u_id"));
                    at.pname.setSelectedItem("" + rs.getString("p_name"));
                    at.umaker.setText("" + rs.getString("u_fname"));
                    java.util.Date pDate = rs.getDate("t_date");
                    java.util.Date pDueDate = rs.getDate("t_duedate");
                    at.date.setDate(pDate);
                    at.due.setDate(pDueDate);
                    at.status.setSelectedItem("" + rs.getString("t_status"));
                    at.add.setEnabled(false);
                    at.update.setEnabled(true);

                    at.setVisible(true);
                    JFrame parent = (JFrame) SwingUtilities.getWindowAncestor(this);
                    parent.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Error: Project with ID " + taskIdToEdit + " not found.");
                }

            } catch (SQLException ex) {
                Logger.getLogger(Projectpage.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_editbuttonActionPerformed

    private void deletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebuttonActionPerformed
        int rowIndex = userTable.getSelectedRow();

        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select a user to delete.");
            return;
        }

        TableModel model = userTable.getModel();
        String userId = model.getValueAt(rowIndex, 0).toString();  // Assuming u_id is in column 0

        int confirm = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to delete this project?",
                "Confirm Deletion",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            dbConnector dbc = new dbConnector();
            String query = "DELETE FROM tbl_task WHERE t_id = '" + userId + "'";
            dbc.deleteData(query);

            JOptionPane.showMessageDialog(null, "Task deleted successfully!");

            // Refresh the table data after deletion
            displayData();
        }
    }//GEN-LAST:event_deletebuttonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deletebutton;
    private javax.swing.JButton editbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    public javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
