/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admin;

import java.awt.Color;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import config.dbConnector;
import java.sql.ResultSet;
import java.sql.SQLException;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author SCC-COLLEGE
 */
public class home extends javax.swing.JInternalFrame {

    /**
     * Creates new form Userpage
     */
    public home() {
        initComponents();
        
        displayData();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);

        searchBar.setOpaque(false);
        searchBar.setBackground(new Color(0,0,0,0));

        // Populate the comboBox for category selection
        searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Users", "Projects", "Tasks" }));
    
    }
    
    public void displayData(){
    try {
        dbConnector dbc = new dbConnector();

        // Users table data
        ResultSet rsUsers = dbc.getData("SELECT u_fname, u_lname FROM tbl_users");
        userTable.setModel(DbUtils.resultSetToTableModel(rsUsers));
        userTable.getColumnModel().getColumn(0).setHeaderValue("First Name");
        userTable.getColumnModel().getColumn(1).setHeaderValue("Last Name");

        // Projects table data
        ResultSet rsProjects = dbc.getData("SELECT p_name FROM tbl_project");
        projectTable.setModel(DbUtils.resultSetToTableModel(rsProjects));
        projectTable.getColumnModel().getColumn(0).setHeaderValue("Project Name");

        // Tasks table data with JOIN to get project name
        String taskQuery = "SELECT t.t_id, p.p_name " +
                           "FROM tbl_task t " +
                           "JOIN tbl_project p ON t.p_id = p.p_id"; // <-- Make sure p.p_id is the correct PK for tbl_project
        ResultSet rsTasks = dbc.getData(taskQuery);
        taskTable.setModel(DbUtils.resultSetToTableModel(rsTasks));
        taskTable.getColumnModel().getColumn(0).setHeaderValue("Task ID");
        taskTable.getColumnModel().getColumn(1).setHeaderValue("Project Name");

    } catch(SQLException ex) {
        System.out.println("Errors: " + ex.getMessage());
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        projectTable = new javax.swing.JTable();
        searchCategory = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 0, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Users");
        jLabel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 70, 30));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Task");
        jLabel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 70, 30));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 20)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 0, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Project");
        jLabel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 3, true));
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 90, 30));

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, 20));

        searchBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        searchBar.setMinimumSize(new java.awt.Dimension(8, 20));
        searchBar.setPreferredSize(new java.awt.Dimension(8, 20));
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        jPanel1.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 240, 23));

        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(taskTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 150, 180, 220));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(userTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 150, 220));

        projectTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(projectTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 130, 220));

        searchCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(searchCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 80, 100, 20));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("HOME PAGE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Untitled Project.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String keyword = searchBar.getText().trim();
    String selectedCategory = (String) searchCategory.getSelectedItem();  // Get selected category

    if (keyword.isEmpty()) {
        displayData();  // Reload all data if search is empty
        return;
    }

    try {
        dbConnector dbc = new dbConnector();
        ResultSet rs = null;

        if ("Users".equals(selectedCategory)) {
            String query = "SELECT u_fname, u_lname FROM tbl_users " +
                           "WHERE u_fname LIKE '%" + keyword + "%' " +
                           "OR u_lname LIKE '%" + keyword + "%'";
            rs = dbc.getData(query);
            userTable.setModel(DbUtils.resultSetToTableModel(rs));
            userTable.getColumnModel().getColumn(0).setHeaderValue("First Name");
            userTable.getColumnModel().getColumn(1).setHeaderValue("Last Name");
            userTable.getTableHeader().repaint();

        } else if ("Projects".equals(selectedCategory)) {
            String query = "SELECT p_name FROM tbl_project " +
                           "WHERE p_name LIKE '%" + keyword + "%'";
            rs = dbc.getData(query);
            projectTable.setModel(DbUtils.resultSetToTableModel(rs));

            // Fix column header
            projectTable.getColumnModel().getColumn(0).setHeaderValue("Project Name");
            projectTable.getTableHeader().repaint();

        } else if ("Tasks".equals(selectedCategory)) {
            String query = "SELECT t_id, p_name FROM tbl_task " +
                           "WHERE p_name LIKE '%" + keyword + "%' " +
                           "OR t_id LIKE '%" + keyword + "%'";
            rs = dbc.getData(query);
            taskTable.setModel(DbUtils.resultSetToTableModel(rs));

            // Fix column headers
            taskTable.getColumnModel().getColumn(0).setHeaderValue("Task ID");
            taskTable.getColumnModel().getColumn(1).setHeaderValue("Task Name");
            taskTable.getTableHeader().repaint();
        }

    } catch (SQLException ex) {
        System.out.println("Error during search: " + ex.getMessage());
    }         
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable projectTable;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchCategory;
    private javax.swing.JTable taskTable;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
