/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CrudsAdmin;

import Admin.AdminDashboard;
import config.dbConnector;
import Admin.Userpage;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

/**
 *
 * @author PC15
 */
public class crud_users extends javax.swing.JFrame {

    /**
     * Creates new form add_users
     */
    public crud_users() {
        initComponents();

    }

    public static String aemail, ausername;

    public boolean duplicateCheck() {
        dbConnector dbc = new dbConnector();
        try {
            String query = "SELECT * FROM tbl_users  WHERE u_username = '" + user.getText() + "' OR u_email = '" + email.getText() + "'";
            ResultSet resultSet = dbc.getData(query);

            if (resultSet.next()) {
                aemail = resultSet.getString("u_email");
                if (aemail.equals(email.getText())) {
                    JOptionPane.showMessageDialog(null, "Email Already Used!");
                    email.setText("");
                }

                ausername = resultSet.getString("u_username");
                if (ausername.equals(user.getText())) {
                    JOptionPane.showMessageDialog(null, "Username Already Used!");
                    user.setText("");
                }
                return true;
            } else {
                return false;
            }

        } catch (SQLException ex) {
            System.out.println("" + ex);
            return false;
        }
    }
    public String hashPassword(String password) {
        try {
            MessageDigest md = MessageDigest.getInstance("SHA-256");
            byte[] hashedBytes = md.digest(password.getBytes());

            StringBuilder sb = new StringBuilder();
            for (byte b : hashedBytes) {
                sb.append(String.format("%02x", b));  // Convert byte to hex
            }
            return sb.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("Error hashing password", e);
        }
    }
    private boolean isValidEmail(String email) {
    return email.endsWith("@gmail.com") || email.endsWith("@yahoo.com") || email.endsWith("@hotmail.com");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        email = new javax.swing.JTextField();
        contact = new javax.swing.JTextField();
        user_id = new javax.swing.JTextField();
        user = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        gender = new javax.swing.JComboBox<>();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        type = new javax.swing.JComboBox<>();
        pass = new javax.swing.JPasswordField();
        status = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        setSize(new java.awt.Dimension(675, 450));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 255, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 121, 220, 30));

        contact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactActionPerformed(evt);
            }
        });
        jPanel2.add(contact, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 157, 220, 30));

        user_id.setEnabled(false);
        jPanel2.add(user_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 13, 220, 30));
        jPanel2.add(user, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 229, 220, 30));
        jPanel2.add(lname, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 85, 220, 30));

        gender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "Male", "Female" }));
        jPanel2.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 193, 220, 30));

        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel2.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(72, 374, 76, 28));

        update.setText("Update");
        update.setEnabled(false);
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel2.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 374, 76, 28));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Email:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 122, 63, 26));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Contact:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 158, 63, 26));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("First Name:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 50, -1, 26));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Username:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 230, 63, 26));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Gender:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 194, 63, 26));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Last Name:");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 86, -1, 26));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("User Type:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 298, 63, 27));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Password:");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 265, 63, 26));

        type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "ADMIN", "USER" }));
        type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeActionPerformed(evt);
            }
        });
        jPanel2.add(type, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 297, 220, 30));
        jPanel2.add(pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 265, 220, 26));

        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SELECT", "Active", "Pending" }));
        jPanel2.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 333, 220, 30));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Status:");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 334, 63, 27));

        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel2.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 374, 76, 28));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel2.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 408, 77, 28));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("User_Id:");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 17, 63, 26));
        jPanel2.add(fname, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 49, 220, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 0, 350, 450));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ADD User FORM");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 190, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Untitled Project.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 680, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void contactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    
        if (fname.getText().isEmpty() || lname.getText().isEmpty() || email.getText().isEmpty()
            || contact.getText().isEmpty() || user.getText().isEmpty() || pass.getText().isEmpty()) {

        JOptionPane.showMessageDialog(null, "All Fields Required!");

    } else if (!isValidEmail(email.getText())) {

        JOptionPane.showMessageDialog(null, "Email must end with @gmail.com, @yahoo.com, or @hotmail.com");
        email.setText("");

    } else if (pass.getText().length() < 8) {

        JOptionPane.showMessageDialog(null, "The password should be 8 characters or more!");
        pass.setText("");

    } else if (duplicateCheck()) {

        System.out.println("Duplicate Exist");

    } else {

        dbConnector dbc = new dbConnector();

        // 👉 Hash the password before storing
        String hashedPass = hashPassword(pass.getText());

        String query = "INSERT INTO tbl_users(u_fname, u_lname, u_email, u_contact, u_gender, u_username, u_password, u_type, u_status) "
                + "VALUES('" + fname.getText() + "','" + lname.getText() + "','" + email.getText() + "','" + contact.getText() + "','"
                + gender.getSelectedItem() + "','" + user.getText() + "','" + hashedPass + "','" + type.getSelectedItem() + "','"
                + status.getSelectedItem() + "')";

        if (dbc.insertData(query)) {
            JOptionPane.showMessageDialog(null, "Inserted SUCCESSFULLY!");
            AdminDashboard ads = new AdminDashboard();
            ads.setVisible(true);
            Userpage up = new Userpage();
            up.setVisible(true);
            ads.mainDesktop.add(up);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Connection Error!");
        }
    }
    }//GEN-LAST:event_addActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if (user_id.getText().isEmpty() || fname.getText().isEmpty() || lname.getText().isEmpty()
            || email.getText().isEmpty() || contact.getText().isEmpty() || user.getText().isEmpty()
            || pass.getPassword().length == 0) {
        JOptionPane.showMessageDialog(null, "All Fields are required!");
    } else if (pass.getPassword().length < 3) {
        JOptionPane.showMessageDialog(null, "Password must be at least 3 characters!");
        pass.setText("");
    } else {
        dbConnector dbc = new dbConnector();

        String hashedPass = hashPassword(new String(pass.getPassword()));

        String query = "UPDATE tbl_users SET "
                + "u_fname = '" + fname.getText() + "', "
                + "u_lname = '" + lname.getText() + "', "
                + "u_email = '" + email.getText() + "', "
                + "u_contact = '" + contact.getText() + "', "
                + "u_gender = '" + gender.getSelectedItem() + "', "
                + "u_username = '" + user.getText() + "', "
                + "u_password = '" + hashedPass + "', "
                + "u_type = '" + type.getSelectedItem() + "', "
                + "u_status = '" + status.getSelectedItem() + "' "
                + "WHERE u_id = '" + user_id.getText() + "'";

        dbc.updateData(query);
        AdminDashboard ads = new AdminDashboard();
        ads.setVisible(true);
        Userpage up = new Userpage();
        up.setVisible(true);
        ads.mainDesktop.add(up);
        this.dispose();
    }
    }//GEN-LAST:event_updateActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
            AdminDashboard ads = new AdminDashboard();
            ads.setVisible(true);
            Userpage up = new Userpage();
            up.setVisible(true);
            ads.mainDesktop.add(up);
            this.dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void typeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        fname.setText("");
        lname.setText("");
        email.setText("");
        contact.setText("");
        user.setText("");
        pass.setText("");
        gender.setSelectedIndex(0);
        type.setSelectedIndex(0);
        status.setSelectedIndex(0);

        JOptionPane.showMessageDialog(null, "Fields have been cleared.");
    }//GEN-LAST:event_clearActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(crud_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(crud_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(crud_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(crud_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new crud_users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton add;
    public javax.swing.JButton cancel;
    public javax.swing.JButton clear;
    public javax.swing.JTextField contact;
    public javax.swing.JTextField email;
    public javax.swing.JTextField fname;
    public javax.swing.JComboBox<String> gender;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JTextField lname;
    public javax.swing.JPasswordField pass;
    public javax.swing.JComboBox<String> status;
    public javax.swing.JComboBox<String> type;
    public javax.swing.JButton update;
    public javax.swing.JTextField user;
    public javax.swing.JTextField user_id;
    // End of variables declaration//GEN-END:variables
}
