/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Printer;

import config.Session; // Still here if you use Session for other things, but not for direct data transfer to printer
import java.awt.Color;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import config.dbConnector;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author SCC-COLLEGE
 */
public class PrintTaskz extends javax.swing.JInternalFrame {

    /**
     * Creates new form Userpage
     */
    public PrintTaskz() {
        initComponents();
        
        displayData();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0,0,0,0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
        searchBar.setOpaque(false);
        searchBar.setBackground(new Color(0,0,0,0));
    }
    
   public void displayData() {
        dbConnector dbc = null;
        ResultSet rs = null;

        try {
            dbc = new dbConnector();

            String sql = "SELECT u.u_id, t.t_id, p.p_name, p.p_salary, " +
                         "CONCAT(u.u_fname, ' ', u.u_lname) AS Full_Name, " +
                         "u.u_email, u.u_contact, u.u_gender, u.u_status, " +
                         "CONCAT(assignee.u_fname, ' ', assignee.u_lname) AS Assigned_To " +
                         "FROM tbl_users u " +
                         "JOIN tbl_task t ON u.u_id = t.u_id " +
                         "JOIN tbl_project p ON t.p_id = p.p_id " +
                         "LEFT JOIN tbl_users assignee ON assignee.u_id = CAST(t.user_assign AS UNSIGNED)";

            rs = dbc.getData(sql);
            userTable.setModel(DbUtils.resultSetToTableModel(rs));

            // Column headers consistent with search
            String[] headers = {
                "User ID", "Task ID", "Project Name", "Salary",
                "Full Name", "Email", "Contact", "Gender",
                "Status", "Assigned To"
            };

            for (int i = 0; i < headers.length && i < userTable.getColumnModel().getColumnCount(); i++) {
                userTable.getColumnModel().getColumn(i).setHeaderValue(headers[i]);
            }

            userTable.getTableHeader().repaint();

            // Optional: set column widths to improve layout
            userTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
            int[] columnWidths = {60, 60, 120, 80, 120, 150, 100, 60, 80, 120};
            for (int i = 0; i < columnWidths.length && i < userTable.getColumnModel().getColumnCount(); i++) {
                userTable.getColumnModel().getColumn(i).setPreferredWidth(columnWidths[i]);
            }

            rs.close();

        } catch (SQLException ex) {
            System.out.println("Errors: " + ex.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (dbc != null && dbc.connect != null && !dbc.connect.isClosed()) dbc.connect.close();
            } catch (SQLException e) {
                System.out.println("Error closing resources: " + e.getMessage());
            }
        }
    }






    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        printbutton = new javax.swing.JButton();
        searchBar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        printbutton.setText("PRINT");
        printbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbuttonActionPerformed(evt);
            }
        });
        jPanel1.add(printbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        searchBar.setMinimumSize(new java.awt.Dimension(8, 20));
        searchBar.setPreferredSize(new java.awt.Dimension(8, 20));
        searchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBarActionPerformed(evt);
            }
        });
        jPanel1.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 80, 230, 23));

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(userTable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 520, 250));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("TASK PAGE");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/Untitled Project.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 380));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchBarActionPerformed

    private void printbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbuttonActionPerformed
      int row = userTable.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a row to print.");
            return;
        }

        try {
            // Extract data from the selected row based on the defined column indices
            String u_id = userTable.getValueAt(row, 0).toString();        // User ID (u.u_id)
            String t_id = userTable.getValueAt(row, 1).toString();        // Task ID (t.t_id)
            String pname = userTable.getValueAt(row, 2).toString();       // Project Name (p.p_name)
            String salary = userTable.getValueAt(row, 3).toString();      // Salary (p.p_salary)
            String umaker = userTable.getValueAt(row, 4).toString();      // User Maker (Full_Name)
            String email = userTable.getValueAt(row, 5).toString();       // Email (u.u_email)
            String contact = userTable.getValueAt(row, 6).toString();     // Contact (u.u_contact)
            String gender = userTable.getValueAt(row, 7).toString();      // Gender (u.u_gender)
            String status = userTable.getValueAt(row, 8).toString();      // Status (u.u_status)
            String assignuser = userTable.getValueAt(row, 9).toString();  // Assigned User (Assigned_To)

            // Open the printer form, passing the extracted data
            printer p = new printer(t_id, u_id, assignuser, pname, umaker, email, contact, gender, status, salary);
            p.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error reading data or opening printer form: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_printbuttonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
            String keyword = searchBar.getText().trim();
        try {
            dbConnector dbc = new dbConnector();
            String query =
                "SELECT u.u_id, t.t_id, p.p_name, p.p_salary, " +
                "CONCAT(u.u_fname, ' ', u.u_lname) AS Full_Name, " +
                "u.u_email, u.u_contact, u.u_gender, u.u_status, " +
                "CONCAT(assignee.u_fname, ' ', assignee.u_lname) AS Assigned_To " +
                "FROM tbl_users u " +
                "JOIN tbl_task t ON u.u_id = t.u_id " +
                "JOIN tbl_project p ON t.p_id = p.p_id " +
                "LEFT JOIN tbl_users assignee ON assignee.u_id = CAST(t.user_assign AS UNSIGNED) " +
                "WHERE CONCAT(u.u_fname, ' ', u.u_lname) LIKE ? " +
                "OR u.u_email LIKE ? OR p.p_name LIKE ? OR t.t_id LIKE ? " +
                "OR CONCAT(assignee.u_fname, ' ', assignee.u_lname) LIKE ?";

            PreparedStatement pst = dbc.connect.prepareStatement(query);
            String like = "%" + keyword + "%";
            for (int i = 1; i <= 5; i++) {
                pst.setString(i, like);
            }

            ResultSet rs = pst.executeQuery();
            if (!rs.isBeforeFirst()) {
                javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel();
                model.setColumnIdentifiers(new String[]{"Message"});
                model.addRow(new Object[]{"No results found for \"" + keyword + "\""});
                userTable.setModel(model);
            } else {
                userTable.setModel(DbUtils.resultSetToTableModel(rs));

                String[] headers = {
                    "User ID", "Task ID", "Project Name", "Salary",
                    "Full Name", "Email", "Contact", "Gender",
                    "Status", "Assigned To"
                };

                for (int i = 0; i < headers.length && i < userTable.getColumnModel().getColumnCount(); i++) {
                    userTable.getColumnModel().getColumn(i).setHeaderValue(headers[i]);
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Database error: " + ex.getMessage());
        }

    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printbutton;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    public javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
